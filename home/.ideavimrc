set number relativenumber
set idearefactormode=keep
set ideajoin
set incsearch
set visualbell
set ideamarks
set commentary

set ignorecase
set history=2000
set which-key
set timeoutlen=5000
set hls
set showmode
set clipboard+=unnamed


" surround (bundle plugin)
" usage: https://github.com/tpope/vim-surround
set surround

" exchange (bundle plugin)
set exchange

" nerdtree (bundle plugin)
set NERDTree

set sneak

" replace with register (bundle plugin)
" usage: https://github.com/vim-scripts/ReplaceWithRegister
" set ReplaceWithRegister

" text-object (bundle plugin)
set vim-paragraph-motion
set textobj-indent
set textobj-entire
set argtextobj

" jump-motion (required idea plugin: IdeaVim-EasyMotion, AceJump)
" let g:WhichKeyDesc_windows_easymotion_search = "<Space>f  EasyMotion Search"
" set easymotion
" nmap s :action KJumpAction<cr>
" nmap S :action KJumpAction.Word1<cr>

" highlight yank (bundle plugin)
set highlightedyank
let g:highlightedyank_highlight_duration = "1000"
let g:highlightedyank_highlight_color = "rgba(57, 197, 187, 155)"

" continuous shift
xnoremap < <gv
xnoremap > >gv

" alias
" nmap <C-a> ggVG"+y

let mapleader = " "
nmap <Space> <Nop>

" Window navigation keymaps
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

nmap <leader>uZ <Action>(ToggleDistractionFreeMode)
nmap <leader>uz <Action>(ToggleZenMode)

" system clipboard
xmap <leader>P "_dP

nmap <leader>D "_d
vmap <leader>D "_d

" next greatest remap ever
nmap y "+y
nmap Y "+Y

imap <C-c> <Esc>

vmap J <Action>(MoveLineDown)
vmap K <Action>(MoveLineUp)

 "{ desc = "C-d keep cursor in middle" })
nnoremap <C-d> <C-d>zz
"{ desc = "C-u keep cursor in middle" })
nnoremap <C-u> <C-u>zz
"{ desc = "search keep cursor in middle" })
nmap n nzzzv
"{ desc = "search keep cursor in middle" })
nmap N Nzzzv

" keymaps

nmap <leader>fe :NERDTreeToggle<CR>
" nmap <leader>pf :NERDTreeFind<CR>
" nmap <leader>pr :NERDTreeRefreshRoot<CR>
" Initial tree width:
let g:NERDTreeWinSize=35
" Show hidden files by default:
let NERDTreeShowHidden=1

" location
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)

" buffer (buffer < window < tab)
nmap <leader>wd <Action>(CloseContent)
" nmap <leader>xa <Action>(CloseAllEditors)
" nmap <leader>xo <Action>(CloseAllEditorsButActive)
" nmap <leader>xp <Action>(CloseAllUnpinnedEditors)

" window
nmap <S-h> <Action>(PreviousTab)
nmap <S-l> <Action>(NextTab)
" nmap <leader>ta <Action>(PinActiveEditorTab)

nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)
nmap <leader>6 <Action>(GoToTab6)
nmap <leader>7 <Action>(GoToTab7)
nmap <leader>8 <Action>(GoToTab8)
nmap <leader>9 <Action>(GoToTab9)

" tab
map <leader>wL <Action>(MoveTabLeft)
map <leader>wK <Action>(MoveTabDown)
map <leader>wJ <Action>(MoveTabUp)
map <leader>wH <Action>(MoveTabRight)
map <C-w>s <Action>(SplitHorizontally)
map <C-w>v <Action>(SplitVertically)

" nmap <C-p> <Action>(JumpToLastWindow)
nmap <C-,> <Action>(PrevSplitter)
" nmap <M-o> <Action>(NextSplitter)

nmap <C-w>m <Action>(HideAllWindows)
nmap <M-m> <Action>(HideAllWindows)
nmap <C-w>M <Action>(MaximizeEditorInSplit)
nmap <C-M-k> <Action>(StretchSplitToTop)
nmap <C-M-j> <Action>(StretchSplitToBottom)
nmap <C-M-h> <Action>(StretchSplitToLeft)
nmap <C-M-l> <Action>(StretchSplitToRight)
nmap <C-w>u <Action>(UnsplitAll)

" menu
nmap <leader>mm <Action>(MainMenu)
nmap <leader>ma <Action>(AnalyzeMenu)
nmap <leader>mb <Action>(BuildMenu)
nmap <leader>mf <Action>(FindMenuGroup)
nmap <leader>mg <Action>(GoToMenu)
nmap <leader>ms <Action>(ScopeViewPopupMenu)
nmap <leader>mt <Action>(EditorTabPopupMenu)
nmap <leader>mw <Action>(ToolWindowsGroup)


" tag
nmap gR <Action>(FindUsages)
nmap gr <Action>(ShowUsages)
" nmap <leader>hl <Action>(HighlightUsagesInFile)
nmap gpd <Action>(QuickPreview)
nmap K <Action>(QuickDefinition)
nmap gk <Action>(QuickTypeDefinition)

" intellij

nmap <leader>Xa <Action>(IdeaVim.ReloadVimRc.reload)

" code

nmap gcc <Action>(CommentByLineComment)
nmap gcb <Action>(CommentByBlockComment)
nmap <leader>ca <Action>(ShowIntentionActions)
nmap <leader>ce <Action>(ShowErrorDescription)
" run
nmap <leader>dr <Action>(ContextRun)
nmap <leader>dc <Action>(RunClass)
nmap <leader>da <Action>(chooseRunConfiguration)
nmap <leader>dl <Action>(Rerun)
nmap <leader>tf  <Action>(RunFailedTests)
nmap gT <Action>(GoToTest)
nmap <leader>tt  <Action>(RunTests)
nmap <leader>dS <Action>(Stop)

" debug
nmap <leader>dR <Action>(ContextDebug)
nmap <Leader>dC <Action>(DebugClass)
nmap <leader>dD <Action>(Debug)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>de <Action>(EditBreakpoint)
nmap <leader>dlb <Action>(ViewBreakpoints)

" refactor

nmap <leader>cmo <Action>(OverrideMethods)
nmap <leader>cmi <Action>(ImplementMethods)
nmap <leader>cf <Action>(ReformatCode)
vmap <leader>cf <Action>(ReformatCode)
nmap <leader>ci <Action>(InspectCode)
" nmap <leader>so <Action>(SelectAllOccurrences)
nmap <leader>rg <Action>(Generate)

nmap <leader>rx <Action>(IntroduceVariable)
vmap <leader>rx <Action>(IntroduceVariable)
nmap <leader>rI <Action>(IntroduceConstant)
vmap <leader>rI <Action>(IntroduceConstant)
nmap <leader>rf <Action>(ExtractMethod)
vmap <leader>rf <Action>(ExtractMethod)
nmap <leader>rs <action>(Refactorings.QuickListPopupAction)
vmap <leader>rs <action>(Refactorings.QuickListPopupAction)
nmap <leader>rc <Action>(CodeMenu)
vmap <leader>rc <Action>(CodeMenu)
nmap <leader>cr <Action>(RenameElement)
vmap <leader>cr <Action>(RenameElement)
nmap <leader>ruw <Action>(Unwrap)
vmap <leader>ruw <Action>(Unwrap)
nmap gsa <Action>(SurroundWith)
vmap gsa <Action>(SurroundWith)
nmap <leader>cd <Action>(SafeDelete)
vmap <leader>cd <Action>(SafeDelete)
nmap <leader>co <Action>(OptimizeImports)
vmap <leader>co <Action>(OptimizeImports)

" hierarchy
nmap <leader>chi <Action>(CallHierarchy)
nmap <leader>chm <Action>(MethodHierarchy)
nmap <leader>cht <Action>(TypeHierarchy)
vmap <leader>chi <Action>(CallHierarchy)
vmap <leader>chm <Action>(MethodHierarchy)
vmap <leader>cht <Action>(TypeHierarchy)

" collapse
nmap zC <Action>(ExpandCollapseToggleAction)
nmap zx <Action>(CollapseAllRegions)
nmap zA <Action>(ExpandAllRegions)

nmap # <Action>(GotoPrevElementUnderCaretUsage)
nmap * <Action>(GotoNextElementUnderCaretUsage)
imap <C-y> <Action>(EditorChooseLookupItem)
map <C-y> <Action>(EditorChooseLookupItem)
map <C-n> <Action>(NextOccurence)
map <C-p> <Action>(PreviousOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(JumpToLastChange)
nmap ]c <Action>(JumpToNextChange)

map <C-Space> <Action>(EditorSelectWord)
map <A-C-Space> <Action>(EditorUnSelectWord)
nmap [a <Action>(MoveElementRight)
nmap ]a <Action>(MoveElementLeft)

" goto
map <leader>sa <Action>(GotoAction)
nmap <leader>fc <Action>(GotoClass)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>ss <Action>(GotoSymbol)
" nmap go <Action>(GotoSuperMethod)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gI <Action>(QuickImplementations)
nmap gn <Action>(ShowNavBar)
nmap gs <action>(FileStructurePopup)
nmap ]d <Action>(GotoPreviousError)
nmap [d <Action>(GotoNextError)



" file
nmap <leader>mo <Action>(OpenFile)
" nmap <leader>yp <Action>(CopyAbsolutePath)
nmap <leader>fb <Action>(RecentFiles)
nmap <leader>fB <Action>(RecentEditedFiles)
" nmap <leader>rl <Action>(RecentLocations)
" nmap <leader>rp <Action>(ManageRecentProjects)
" nmap <leader>sh <Action>(LocalHistory.ShowHistory)
" nmap <leader>sf <Action>(ShowFilePath)
" nmap <leader>si <Action>(SelectIn)
" nmap <leader>sg <Action>(FindInPath)
nmap <leader>sg <Action>(SearchEverywhere)
nmap <leader>sG <Action>(TextSearchAction)
nmap <leader>sr <Action>(ReplaceInPath)
" nmap <leader>sw <Action>($SearchWeb)
nmap <leader>sc <action>(Find)

" terminal
nmap <leader>ft <Action>(ActivateTerminalToolWindow)
nmap <leader>tc <Action>(Terminal.OpenInTerminal)

" bookmark
nmap ma <Action>(ToggleBookmark)
nmap mm <Action>(ShowBookmarks)

" Git
nmap <leader>gg <Action>(Vcs.Show.Log)
nmap <leader>gc <Action>(CheckinProject)
nmap <leader>gp <Action>(Git.Pull)

" todo
nmap <leader>st <Action>(ActivateTODOToolWindow)

" task
" nmap <leader>ts <Action>(tasks.goto)

" idea join
nmap J <Action>(EditorJoinLines)


" open IdeaVim settings
nmap <leader>Xv <Action>(VimActions)

" translation (required idea plugin: Translation)
nmap <leader>Td <Action>($ShowTranslationDialogAction)
nmap <leader>Tc <Action>($TranslateTextComponent)
nmap <leader>Ti <Action>($InclusiveTranslateAction)
nmap <leader>Te <Action>($ExclusiveTranslateAction)

" string manipulate (required idea plugin: String Manipulation)
" nmap <leader>ss <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)

" code screenshot (required idea plugin: Code Screenshots)
" nmap <leader>cs <Action>(one.util.ideaplugin.screenshoter.CopyImageAction)
" code screenshot (required idea plugin: code screenshots)
" nmap <leader>cs <action>(one.util.ideaplugin.screenshoter.copyimageaction)

" amazon q configuration
" CodeWhispererRecommendationAction
map <M-c> <Action>(CodeWhispererRecommendationAction)
imap <C-space> <Action>(CodeWhispererRecommendationAction)
map <leader>at <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.GenerateUnitTestsAction)
map <leader>am <Action>(aws.toolkit.jetbrains.core.services.cwc.actions.ContextMenuActions)
map <leader>ae <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.ExplainCodeAction)
map <leader>af <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.FixCodeAction)
map <leader>ao <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.OptimizeCodeAction)
map <leader>ar <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.RefactorCodeAction)
map <leader>as <Action>(aws.toolkit.jetbrains.core.services.cwc.commands.SendToPromptAction)
map <leader>aq <Action>(q.openchat)
map <leader>ac <Action>(aws.toolkit.jetbrains.core.services.cwc.inline.openChat)


