
# ============================================================================ #
# ===                               PLUGINS                                === #
# ============================================================================ #

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin "janoamaral/tokyo-night-tmux"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

# ============================================================================ #
# ===                               GENERAL                                === #
# ============================================================================ #
set -g default-terminal "screen-256color"

# Change Menu
set -g @menus_trigger m

# set -g default-terminal "tmux-256color"
# set -as terminal-features ",tmux*:RGB"
# set-option -a terminal-overrides ",*256col*:RGB"

# Start windows numbering at 1.
set -g base-index 1

# Start pane numbering at 1.
setw -g pane-base-index 1

# Re-draw status window seconds.
set -g status-interval 3

# Set scrollback history (100k).
set -g history-limit 100000

# Shorten command delay.
set -sg escape-time 0

# Automatic tab rename to current dir
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Notify applications (nvim) of focus changes
set-option -g focus-events on

# renumber windows when a window is closed
set-option -g renumber-windows on

# allow to use OSC52 to copy from ssh
# https://github.com/tmux/tmux/wiki/Clipboard
set -s set-clipboard on

# Set Ctrl-a as the default prefix key combination and unbind C-b to free it up.
set -g prefix C-a
unbind C-b

# Use send-prefix to pass C-a through to application.
bind C-a send-prefix

# Reload ~/.tmux.conf using PREFIX r.
# bind r source-file ~/.tmux.conf

# Create window with current path.
bind c new-window -c "#{pane_current_path}"

# Bind <prefix>- to split window horizontally.
bind s split-window -v -c "#{pane_current_path}"
unbind %

# Bind <prefix>| to split window vertically.
bind v split-window -h -c "#{pane_current_path}"
unbind '"'

# Kill pane without confirmation.
bind x kill-pane

# Remove delay after escape.
set -sg escape-time 0

bind -r z resize-pane -Z

set-window-option -g mode-keys vi

bind e copy-mode

bind-key -T copy-mode-vi v send -X begin-selection # start selecting text with "v"
# bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse

# Set sesh
bind-key "w" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
)\""

# Recommended by sesh
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# smart split
# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'M-,' select-pane -l

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

# Visual notification of activity in other windows.
setw -g monitor-activity off
set -g visual-activity off

# Move windows to left or right
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# enable mouse support
set -g mouse on

set-environment -g TMUX_PLUGIN_MANAGER_PATH $XDG_DATA_HOME/tmux/plugins

if "test ! -d $XDG_DATA_HOME/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $XDG_DATA_HOME/tmux/plugins/tpm && $XDG_DATA_HOME/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
run -b "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
