# ============================================================================ #
# ===                               PLUGINS                                === #
# ============================================================================ #

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
set -g @plugin 'tmux-plugins/tmux-yank'

# ============================================================================ #
# ===                               GENERAL                                === #
# ============================================================================ #
set -g default-terminal "screen-256color"


set -g default-command $SHELL

# Change Menu
set -g @menus_trigger z

# set -g default-terminal "tmux-256color"
# set -as terminal-features ",tmux*:RGB"
# set-option -a terminal-overrides ",*256col*:RGB"

# Start windows numbering at 1.
set -g base-index 1

# Start pane numbering at 1.
setw -g pane-base-index 1

# Re-draw status window seconds.
set -g status-interval 3

# Set scrollback history (100k).
set -g history-limit 100000

# Shorten command delay.
set -sg escape-time 0

# Automatic tab rename to current dir
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# # Set host name ass status bar
# set -g status-right '#[fg=blue]#(hostname)'
# # set -g status-right "#H"

# Notify applications (nvim) of focus changes
set-option -g focus-events on

# renumber windows when a window is closed
set-option -g renumber-windows on

# allow to use OSC52 to copy from ssh
# https://github.com/tmux/tmux/wiki/Clipboard
set -s set-clipboard on

# Set Ctrl-a as the default prefix key combination and unbind C-b to free it up.
set -g prefix C-a
unbind C-b

# Use send-prefix to pass C-a through to application.
bind C-a send-prefix

# Reload ~/.tmux.conf using PREFIX r.
# bind r source-file ~/.tmux.conf

# Create window with current path.
bind c new-window -c "#{pane_current_path}"

# Bind <prefix>- to split window horizontally.
bind s split-window -v -c "#{pane_current_path}"
unbind %

# Bind <prefix>| to split window vertically.
bind v split-window -h -c "#{pane_current_path}"
unbind '"'

# Kill pane without confirmation.
bind x kill-pane

# Remove delay after escape.
set -sg escape-time 0

set-window-option -g mode-keys vi

# Copy mode
bind e copy-mode
bind-key -T copy-mode-vi v send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi x send -X clear-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi _ send-keys -X start-of-line\; send-keys -X search-backward "^U[;']w[;']) { "
set -g @yank_with_mouse off
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
unbind -T copy-mode MouseDragEnd1Pane

# Set sesh
bind-key "w" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
)\""

# Recommended by sesh
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# smart split
# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'
bind-key -n C-, if -F "#{@pane-is-vim}" 'send-keys C-,'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-M-h if -F "#{@pane-is-vim}" 'send-keys C-M-h' 'resize-pane -L 5'
bind-key -n C-M-j if -F "#{@pane-is-vim}" 'send-keys C-M-j' 'resize-pane -D 5'
bind-key -n C-M-k if -F "#{@pane-is-vim}" 'send-keys C-M-k' 'resize-pane -U 5'
bind-key -n C-M-l if -F "#{@pane-is-vim}" 'send-keys C-M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-,' select-pane -l

bind-key -n C-S-M-h if -F "#{@pane-is-vim}" 'send-keys C-S-M-h' 'swap-pane -d -t "{left-of}"'
bind-key -n C-S-M-j if -F "#{@pane-is-vim}" 'send-keys C-S-M-j' 'swap-pane -d -t "{down-of}"'
bind-key -n C-S-M-k if -F "#{@pane-is-vim}" 'send-keys C-S-M-k' 'swap-pane -d -t "{up-of}"'
bind-key -n C-S-M-l if -F "#{@pane-is-vim}" 'send-keys C-S-M-l' 'swap-pane -d -t "{right-of}"'

bind -r m resize-pane -Z

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'

# Visual notification of activity in other windows.
setw -g monitor-activity off
set -g visual-activity off

# Move windows to left or right
# bind L swap-window -t -1
# bind K C-S-Right swap-window -t +1

# enable mouse support
set -g mouse on

## COLORSCHEME: gruvbox dark (medium)
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# # clock
# set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#{?client_prefix,#[bg=green]#[fg=colour245] #S ,#[bg=colour244]#[fg=blue]#[bold] #S }"
set-option -g status-right "#[bg=colour251,fg=colour237] #h "

set-window-option -g window-status-current-format "#[bg=colour248,fg=colour237] #I:#[bg=colour248,fg=colour237,bold]#W #{a?window_zoomed_flag,*Z,}"
set-window-option -g window-status-format "#[bg=colour239,fg=colour248] #I:#[bg=colour239,fg=colour248]#W #[bg=colour239,fg=colour248]|"

# tpm
set-environment -g TMUX_PLUGIN_MANAGER_PATH $XDG_DATA_HOME/tmux/plugins

if "test ! -d $XDG_DATA_HOME/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $XDG_DATA_HOME/tmux/plugins/tpm && $XDG_DATA_HOME/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
run -b "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
