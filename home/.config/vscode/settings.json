{
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.env.osx": {
    "Q_NEW_SESSION": "1"
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.commandPalette.experimental.enableNaturalLanguageSearch": false,
  "viceroy.config.lastVersion": "0.51.201448",
  "files.watcherExclude": {
    "**/build/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.hg/store/**": true
  },
  "files.exclude": {
    ".viceroy": true,
    "apollo-overrides": true,
    "release-info": true,
    "src/*/build": false,
    "build": false,
    "env": true,
    "packageInfo*": true,
    ".bemol": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true
  },
  "search.exclude": {
    "env": true,
    "src/*/build": true,
    "build": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true
  },
  "[brazilPackageConfig]": {
    "workbench.editor.languageDetection": false
  },
  "viceroy.marketplace.extensionUpdateChannels": {
    "amzn.AWSGuruQLinter": "stable",
    "amazon.controls-dsl": "stable",
    "amzn.amzn-pippin": "stable",
    "amzn.vscode-isengard-tooltip": "stable",
    "mchpatr.datapath-vscode": "stable",
    "marklel.vscode-brazil": "stable",
    "kaze.vscode-plugin-contribution-model": "stable",
    "mchpatr.datapath-language-server": "stable",
    "asbx.amzn-cline": "stable"
  },
  "viceroy.config.internal.lastUpdateTime": "2023-08-06T15:16:23.890Z",
  "viceroy.workspaceSyncStrategy": "automatic",
  "viceroy.doc.welcome.showAtStartup": false,
  "vscodeWorkspaceSwitcher.paths": [
    "/Users/limonoct/workplace"
  ],
  "vscodeWorkspaceSwitcher.showInActivityBar": true,
  "workbench.statusBar.visible": true,
  "editor.renderControlCharacters": true,
  "workbench.panel.defaultLocation": "bottom",
  "workbench.panel.opensMaximized": "preserve",
  "editor.formatOnSave": false,
  "files.trimTrailingWhitespace": true,
  "[python]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true
  },
  "git.enableSmartCommit": true,
  "search.collapseResults": "alwaysExpand",
  "git.confirmSync": false,
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "jupyter.askForKernelRestart": false,
  "go.toolsManagement.autoUpdate": true,
  "security.workspace.trust.untrustedFiles": "open",
  "python.defaultInterpreterPath": "/bin/python3.11",
  "workbench.editor.enablePreview": true,
  "editor.bracketPairColorization.enabled": true,
  "files.associations": {
    "*.txt": "plaintext",
    "*.x": "xfile"
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "haskell.manageHLS": "GHCup",
  "[haskell]": {
    "editor.defaultFormatter": "haskell.haskell"
  },
  "binocular.general.additionalSearchLocations": [
    "~/home/Dropbox/projects"
  ],
  "vim.foldfix": true,
  //  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#C34043",
  "vim.showMarksInGutter": false,
  // "vim.sneak": true,
  // "vim.sneakUseIgnorecaseAndSmartcase": true,
  // "vscode-neovim.neovimExecutablePaths.linux": "/home/tdeneire/bin/nvim",
  // "vscode-neovim.useCtrlKeysForInsertMode": false,
  // "vscode-neovim.useCtrlKeysForNormalMode": false,
  "errorLens.statusBarMessageEnabled": true,
  "errorLens.statusBarColorsEnabled": true,
  "errorLens.messageEnabled": true,
  "zenMode.hideStatusBar": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.restore": true,
  "zenMode.centerLayout": true,
  "gitlens.mode.active": "zen",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.currentLine.enabled": false,
  "fzf-quick-open.ripgrepSearchStyle": "Smart case",
  "fzf-quick-open.findDirectoriesCmd": "fd --type d",
  "window.newWindowDimensions": "maximized",
  "editor.cursorSurroundingLines": 5,
  "editor.inlineSuggest.enabled": true,
  "editor.suggest.insertMode": "replace",
  "editor.suggestFontSize": 14,
  "editor.guides.bracketPairs": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.lineNumbers": "relative",
  "editor.wordWrap": "on",
  "editor.detectIndentation": false,
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.autoSave": "afterDelay",
  "editor.scrollbar.verticalScrollbarSize": 2,
  "editor.scrollbar.horizontalScrollbarSize": 2,
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.horizontal": "hidden",
  "editor.fontLigatures": true,
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "line",
  "editor.fontSize": 16,
  "editor.lineHeight": 0,
  "editor.rulers": [
    120
  ],
  "editor.renderWhitespace": "none",
  "editor.smoothScrolling": true,
  "editor.stickyScroll.enabled": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "editor.guides.indentation": false,
  "editor.linkedEditing": true,
  "editor.cursorBlinking": "solid",
  "editor.minimap.enabled": false,
  "editor.scrollBeyondLastLine": false,
  "editor.selectionHighlight": true,
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
  "window.menuBarVisibility": "toggle",
  "workbench.editor.showTabs": "multiple",
  "workbench.editor.labelFormat": "short",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.quickSuggestions": {
      "other": true,
      "comments": true,
      "strings": true
    }
  },
  "workbench.layoutControl.enabled": false,
  "window.restoreWindows": "none",
  "window.commandCenter": true,
  "symbols.hidesExplorerArrows": false,
  "breadcrumbs.enabled": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "errorLens.fontStyleItalic": true,
  "search.useIgnoreFiles": false,
  "prettier.semi": false,
  "prettier.singleAttributePerLine": true,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  "workbench.settings.editor": "json",
  "workbench.startupEditor": "readme",
  "redhat.telemetry.enabled": true,
  "[java]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "gitlens.remotes": [
    {
      "domain": "git.amazon.com",
      "type": "Custom",
      "name": "Amazon",
      "protocol": "https",
      "urls": {
        "repository": "https://code.amazon.com/packages/${repoPath}",
        "branches": "https://code.amazon.com/packages/${repoPath}/trees",
        "branch": "https://code.amazon.com/packages/${repoPath}/trees/${branch}",
        "commit": "https://code.amazon.com/packages/${repoPath}/commits/${id}",
        "file": "https://code.amazon.com/packages/${repoPath}/blobs/mainline/--/${file}${line}",
        "fileInBranch": "https://code.amazon.com/packages/${repoPath}/blobs/${branch}/--/${file}${line}",
        "fileInCommit": "https://code.amazon.com/packages/${repoPath}/blobs/${id}/--/${file}${line}",
        "fileLine": "#L${line}",
        "fileRange": "#L${start}-L${end}"
      }
    }
  ],
  "workbench.iconTheme": "vs-minimal",
  "git.openRepositoryInParentFolders": "never",
  "go.toolsEnvVars": {
    "GOPROXY": "direct"
  },
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.allowChords": true,
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "<C-c>"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    //  {
    //    "before": [
    //      ">"
    //    ],
    //    "commands": [
    //      "editor.action.indentLines"
    //    ]
    //  },
    //  {
    //    "before": [
    //      "<"
    //    ],
    //    "commands": [
    //      "editor.action.outdentLines"
    //    ]
    //  },
    {
      "before": [
        "<"
      ],
      "after": [
        "<",
        "g",
        "v"
      ]
    },
    {
      "before": [
        ">"
      ],
      "after": [
        ">",
        "g",
        "v"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "g",
        "c",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ],
      "silent": true
    }
  ],
  "vim.handleKeys": {
    "<C-b>": false,
    "<C-o>": false
  },
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        ":",
        "w",
        "<CR>"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "q"
      ],
      "commands": [
        "workbench.action.closeWindow"
      ],
      "when": "workbench.action.closeWindow"
    }
  ],
  "vim.normalModeKeyBindings": [
    // GENERAL
    {
      // Go to left window
      "before": [
        "<C-h>"
      ],
      "after": [
        "<C-W>",
        "h"
      ]
    },
    {
      // Go to lower window
      "before": [
        "<C-j>"
      ],
      "after": [
        "<C-W>",
        "j"
      ]
    },
    {
      // Go to upper window
      "before": [
        "<C-k>"
      ],
      "after": [
        "<C-W>",
        "k"
      ]
    },
    {
      // Go to right window
      "before": [
        "<C-l>"
      ],
      "after": [
        "<C-W>",
        "l"
      ]
    },
    {
      // Increase window height
      "before": [
        "<C-Up>"
      ],
      "commands": [
        "workbench.action.increaseViewHeight"
      ]
    },
    {
      // Decrease window height
      "before": [
        "<C-Up>"
      ],
      "commands": [
        "workbench.action.decreaseViewHeight"
      ]
    },
    {
      // Decrease window width
      "before": [
        "<C-left>"
      ],
      "commands": [
        "workbench.action.decreaseViewWidth"
      ]
    },
    {
      // Increase window width
      "before": [
        "<C-Right>"
      ],
      "commands": [
        "workbench.action.increaseViewWidth"
      ]
    },
    {
      // Move down
      "before": [
        "<A-j>"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      // Move up
      "before": [
        "<A-k>"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    {
      // Prev buffer
      "before": [
        "<S-h>"
      ],
      "commands": [
        ":bprev"
      ]
    },
    {
      // Next buffer
      "before": [
        "<S-l>"
      ],
      "commands": [
        ":bnext"
      ]
    },
    {
      // Prev buffer
      "before": [
        "[",
        "b"
      ],
      "commands": [
        ":bprev"
      ]
    },
    {
      // Next buffer
      "before": [
        "]",
        "b"
      ],
      "commands": [
        ":bnext"
      ]
    },
    {
      "before": [
        "C"
      ],
      "after": [
        "c",
        "$"
      ]
    }
    // {
    //   // Switch to Other Buffer
    //   "before": ["<leader>", "b", "b"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Switch to Other Buffer
    //   "before": ["<leader>", "`"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Escape and clear hlsearch
    //   "before": ["<esc>"],
    //   "commands": ["N/A - current VSCode behaviour"]
    // },
    {
      // Redraw / clear hlsearch / diff update
      "before": [
        "<leader>",
        "u",
        "r"
      ],
      "commands": [
        "workbench.action.reloadWindow"
      ]
    },
    {
      "before": [
        "g",
        "w"
      ],
      "after": [
        "*"
      ]
    },
    // {
    //   // Next search result
    //   "before": ["n"],
    //   "commands": ["N/A - current VSCode behaviour"]
    // },
    // {
    //   // Prev search result
    //   "before": ["N"],
    //   "commands": ["N/A - current VSCode behaviour"]
    // },
    // {
    //   // Save file
    //   "before": ["<C-s"],
    //   "commands": ["N/A - current VSCode behaviour"]
    // },
    {
      // Lazy
      "before": [
        "<leader>",
        "l"
      ],
      "commands": [
        "workbench.view.extensions"
      ]
    },
    {
      // New File
      "before": [
        "<leader>",
        "f",
        "n"
      ],
      "commands": [
        "workbench.action.files.newUntitledFile"
      ]
    },
    // {
    //   // Location List
    //   "before": ["<leader>", "x", "l"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Quickfix List
    //   "before": ["<leader>", "x", "q"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle format on Save
    //   "before": ["<leader>", "u", "f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle spelling
    //   "before": ["<leader>", "u", "s"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Toggle Word Wrap
      "before": [
        "<leader>",
        "u",
        "w"
      ],
      "commands": [
        "editor.action.toggleWordWrap"
      ]
    },
    // {
    //   // Toggle Line Numbers
    //   "before": ["<leader>", "u", "l"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Diagnostics
    //   "before": ["<leader>", "u", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Conceal
    //   "before": ["<leader>", "u", "c"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Inlay Hints
    //   "before": ["<leader>", "u", "h"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Lazygit (root dir)
      "before": [
        "<leader>",
        "g",
        "g"
      ],
      "commands": [
        "lazygit.openLazygit",
      ]
    },
    {
      // Lazygit (cwd)
      "before": [
        "<leader>",
        "g",
        "G"
      ],
      "commands": [
        "workbench.view.scm"
      ],
      "when": "workbench.scm.active"
    },
    {
      // Quit all
      "before": [
        "<leader>",
        "q",
        "q"
      ],
      "commands": [
        "workbench.action.quit"
      ]
    },
    // {
    //   // Inspect Pos
    //   "before": ["<leader>", "u", "i"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // LazyVim Changelog
      "before": [
        "<leader>",
        "L"
      ],
      "commands": [
        "update.showCurrentReleaseNotes"
      ]
    },
    {
      // Terminal (root dir)
      "before": [
        "<leader>",
        "f",
        "t"
      ],
      "commands": [
        "workbench.action.createTerminalEditor"
      ],
      "when": "terminal.active"
    },
    {
      // Terminal (cwd)
      "before": [
        "<leader>",
        "f",
        "T"
      ],
      "commands": [
        "workbench.action.createTerminalEditor"
      ],
      "when": "terminal.active"
    },
    // {
    //   // Terminal (root dir)
    //   "before": ["<C-/>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Which Key Ignore
    //   "before": ["<C-_>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Enter Normal Mode
    //   "before": ["<esc>", "<esc>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Hide Terminal
    //   "before": ["<C-/>"],
    //   "commands": ["N/A - binding not possible in VSCode"],
    // },
    // {
    //   // Other window
    //   "before": ["<leader>", "w", "w"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Delete window
    //   "before": ["<leader>", "d", "w"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Split window below
    //   "before": ["<leader>", "w", "-"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Split window right
    //   "before": ["<leader>", "w", "|"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Split window below
    //   "before": ["<leader>", "-"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Split window right
      "before": [
        "<leader>",
        "|"
      ],
      "commands": [
        "workbench.action.splitEditor"
      ]
    },
    // {
    //   // Last Tab
    //   "before": ["<leader>", "<tab>", "l"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // First Tab
    //   "before": ["<leader>", "<tab>", "f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // New Tab
    //   "before": ["<leader>", "<tab>", "<tab>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Next Tab
    //   "before": ["<leader>", "<tab>", "]"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Close Tab
    //   "before": ["<leader>", "<tab>", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Previous Tab
    //   "before": ["<leader>", "<tab>", "["],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // LSP
    {
      // Line Diagnostics
      "before": [
        "<leader>",
        "c",
        "d"
      ],
      "commands": [
        "editor.action.showHover"
      ],
      "when": "workbench.panel.output.active"
    },
    {
      // LSP info
      "before": [
        "<leader>",
        "c",
        "l"
      ],
      "commands": [
        "workbench.action.output.toggleOutput"
      ]
    },
    {
      // Goto Definition
      "before": [
        "g",
        "d"
      ],
      "commands": [
        "editor.action.revealDefinition"
      ]
    },
    {
      // References
      "before": [
        "g",
        "r"
      ],
      "commands": [
        "editor.action.goToReferences"
      ]
    },
    {
      // Goto Declaration
      "before": [
        "g",
        "D"
      ],
      "commands": [
        "editor.action.revealDeclaration"
      ]
    },
    {
      // Goto Implementation
      "before": [
        "g",
        "I"
      ],
      "commands": [
        "editor.action.goToImplementation"
      ]
    },
    {
      // Goto T[y]pe Definition
      "before": [
        "g",
        "y"
      ],
      "commands": [
        "editor.action.goToTypeDefinition"
      ]
    },
    {
      // Hover
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.showHover"
      ]
    },
    {
      // Signature Help
      "before": [
        "g",
        "K"
      ],
      "commands": [
        "editor.action.triggerParameterHints"
      ],
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
      // Signature Help
      "before": [
        "<C-k>"
      ],
      "commands": [
        "editor.action.triggerParameterHints"
      ],
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
      // Next Diagnostic
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.next"
      ],
      "when": "editorFocus"
    },
    {
      // Prev Diagnostic
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prev"
      ],
      "when": "editorFocus"
    },
    {
      // Next Error
      "before": [
        "]",
        "e"
      ],
      "commands": [
        "editor.action.marker.next"
      ],
      "when": "editorFocus"
    },
    {
      // Prev Error
      "before": [
        "[",
        "e"
      ],
      "commands": [
        "editor.action.marker.prev"
      ],
      "when": "editorFocus"
    },
    {
      // Next Warning
      "before": [
        "]",
        "w"
      ],
      "commands": [
        "editor.action.marker.next"
      ],
      "when": "editorFocus"
    },
    {
      // Prev Warning
      "before": [
        "[",
        "w"
      ],
      "commands": [
        "editor.action.marker.prev"
      ],
      "when": "editorFocus"
    },
    {
      // Format Document
      "before": [
        "<leader>",
        "c",
        "f"
      ],
      "commands": [
        "editor.action.formatDocument"
      ],
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    // {
    //   // Format Range
    //   "before": ["<leader>", "c", "f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Code Action
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ],
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      // Source Action
      "before": [
        "<leader>",
        "c",
        "A"
      ],
      "commands": [
        "editor.action.quickFix"
      ],
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      // Rename
      "before": [
        "<leader>",
        "c",
        "r"
      ],
      "commands": [
        "editor.action.rename"
      ],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    // BUFFERLINE.NVIM
    {
      // Toggle pin
      // NOTE: Separate commands required due to VSCode limitations
      // pin
      "before": [
        "<leader>",
        "b",
        "p"
      ],
      "commands": [
        "workbench.action.pinEditor"
      ],
      "when": "!activeEditorIsPinned"
    },
    {
      // Toggle pin
      // NOTE: Separate commands required due to VSCode limitations
      // unpin
      "before": [
        "<leader>",
        "b",
        "u"
      ],
      "commands": [
        "workbench.action.unpinEditor"
      ],
      "when": "activeEditorIsPinned"
    },
    {
      // Delete non-pinned buffers
      "before": [
        "<leader>",
        "b",
        "P"
      ],
      "commands": [
        "workbench.action.closeAllEditors"
      ]
    },
    {
      // Close buffer
      "before": [
        "<leader>",
        "b",
        "d"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      // Find buffer
      "before": [
        "<leader>",
        ",",
      ],
      "commands": [
        "workbench.action.showAllEditors"
      ]
    },
    // FLASH.NVIM
    // {
    //   // Flash
    //   "before": ["s"],
    //   "commands": ["BINDING IN vim.normalModeKeyBindingsNonRecursive"]
    // },
    // {
    //   // Flash Treesitter
    //   "before": ["S"],
    //   "commands": ["BINDING IN vim.normalModeKeyBindingsNonRecursive"]
    // },
    // {
    //   // Remote Treesitter
    //   "before": ["r"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Treesitter Search
    //   "before": ["R"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Flash Search
    //   "before": ["<c-s>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // MASON.NVIM
    // {
    //   // Mason
    //   "before": ["<leader>", "c", "m"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // MINI.BUFREMOVE
    // {
    //   // Delete Buffer
    //   "before": ["<leader>", "b", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Delete Buffer (Force)
    //   "before": ["<leader>", "b", "D"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // MINI.SURROUND
    // {
    //   // Add surrounding
    //   "before": ["g", "z", "a"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Delete surrounding
    //   "before": ["g", "z", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Find right surrounding
    //   "before": ["g", "z", "f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Find left surrounding
    //   "before": ["g", "z", "F"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Highlight surrounding
    //   "before": ["g", "z", "h"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Replace surrounding
    //   "before": ["g", "z", "r"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Update MiniSurround.config.n_lines
    //   "before": ["g", "z", "n"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NEO-TREE.NVIM
    {
      // Explorer NeoTree (root dir)
      "before": [
        "<leader>",
        "fe"
      ],
      "commands": [
        "workbench.files.action.showActiveFileInExplorer"
      ]
    },
    {
      // Explorer NeoTree (cwd)
      "before": [
        "<leader>",
        "fE"
      ],
      "commands": [
        "workbench.explorer.fileView.toggleVisibility"
      ]
    },
    {
      // Explorer NeoTree (root dir)
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        "workbench.files.action.showActiveFileInExplorer"
      ]
    },
    {
      // Explorer NeoTree (cwd)
      "before": [
        "<leader>",
        "E"
      ],
      "commands": [
        "workbench.explorer.fileView.toggleVisibility"
      ]
    },
    // NOICE.NVIM
    // {
    //   // Redirect Cmdline
    //   "before": ["<S-Enter>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Noice Last Message
      "before": [
        "<leader>",
        "s",
        "n",
        "l"
      ],
      "commands": [
        "workbench.action.output.toggleOutput"
      ],
      "when": "workbench.panel.output.active"
    },
    {
      // Noice History
      "before": [
        "<leader>",
        "s",
        "n",
        "h"
      ],
      "commands": [
        "workbench.action.output.toggleOutput"
      ],
      "when": "workbench.panel.output.active"
    },
    {
      // Noice All
      "before": [
        "<leader>",
        "s",
        "n",
        "a"
      ],
      "commands": [
        "workbench.action.output.toggleOutput"
      ],
      "when": "workbench.panel.output.active"
    },
    // {
    //   // Dismiss All
    //   "before": ["<leader>", "s", "n", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Scroll forward
    //   "before": ["<c-f>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Scroll backward
    //   "before": ["<c-b>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-NOTIFY
    // {
    //   // Dismiss all Notifications
    //   "before": ["<leader>", "u", "n"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-SPECTRE
    {
      // Replace in files (Spectre)
      "before": [
        "<leader>",
        "s",
        "r"
      ],
      "commands": [
        "editor.action.startFindReplaceAction"
      ],
      "when": "editorFocus || editorIsOpen"
    },
    // NVIM-TREESITTER
    // {
    //   // Increment selection
    //   "before": ["<c-space>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Decrement selection
    //   "before": ["<bs>"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // PERSISTENCE.NVIM
    // {
    //   // Restore Session
    //   "before": ["<leader>", "q", "s"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Restore Last Session
    //   "before": ["<leader>", "q", "l"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Don't Save Current Session
    //   "before": ["<leader>", "q", "d"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // TELESCOPE.NVIM
    {
      // Grep (root dir)
      "before": [
        "<leader>",
        "/"
      ],
      "commands": [
        "workbench.action.findInFiles"
      ]
    },
    // {
    //   // Command History
    //   "before": ["<leader>", ":"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Find Files (root dir)
      "before": [
        "<leader>",
        "<space>"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // Buffers
      "before": [
        "<leader>",
        "f",
        "b"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // Find Files (root dir)
      "before": [
        "<leader>",
        "f",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // Find Files (cwd)
      "before": [
        "<leader>",
        "f",
        "F"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // Recent
      "before": [
        "<leader>",
        "f",
        "r"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // Recent (cwd)
      "before": [
        "<leader>",
        "f",
        "R"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      // commits
      "before": [
        "<leader>",
        "g",
        "c"
      ],
      "commands": [
        "workbench.view.scm"
      ],
      "when": "workbench.scm.active"
    },
    {
      // status
      "before": [
        "<leader>",
        "g",
        "s"
      ],
      "commands": [
        "workbench.view.scm"
      ],
      "when": "workbench.scm.active"
    },
    // {
    //   // Registers
    //   "before": ['<leader>", "s", '"'],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Auto Commands
    //   "before": ["<leader>", "s", "a"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Buffer
      "before": [
        "<leader>",
        "s",
        "b"
      ],
      "commands": [
        "editor.action.startFindReplaceAction"
      ],
      "when": "editorFocus || editorIsOpen"
    },
    // {
    //   // Command History
    //   "before": ["<leader>", "s", "c"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Commands
      "before": [
        "<leader>",
        "s",
        "C"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      // Document diagnostics
      "before": [
        "<leader>",
        "s",
        "d"
      ],
      "commands": [
        "workbench.actions.view.problems"
      ],
      "when": "workbench.panel.markers.view.active"
    },
    {
      // Workspace diagnostics
      "before": [
        "<leader>",
        "s",
        "D"
      ],
      "commands": [
        "workbench.actions.view.problems"
      ],
      "when": "workbench.panel.markers.view.active"
    },
    {
      // Grep (root dir)
      "before": [
        "<leader>",
        "s",
        "g"
      ],
      "commands": [
        "workbench.action.findInFiles"
      ]
    },
    {
      // Grep (cwd)
      "before": [
        "<leader>",
        "s",
        "G"
      ],
      "commands": [
        "workbench.action.findInFiles"
      ]
    },
    {
      // Help Pages
      "before": [
        "<leader>",
        "s",
        "h"
      ],
      "commands": [
        "workbench.action.openDocumentationUrl"
      ]
    },
    // {
    //   // Search Highlight Groups
    //   "before": ["<leader>", "s", "H"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Key Maps
      "before": [
        "<leader>",
        "s",
        "k"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    // {
    //   // Man Pages
    //   "before": ["<leader>", "s", "M"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Jump to Mark
    //   "before": ["<leader>", "s", "m"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Options
    //   "before": ["<leader>", "s", "o"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Resume
    //   "before": ["<leader>", "s", "R"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Word (root dir)
    //   "before": ["<leader>", "s", "w"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Word (cwd)
    //   "before": ["<leader>", "s", "W"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Selection (root dir)
    //   "before": ["<leader>", "s", "w"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Selection (cwd)
    //   "before": ["<leader>", "s", "W"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Colorscheme with preview
      "before": [
        "<leader>",
        "u",
        "C"
      ],
      "commands": [
        "workbench.action.selectTheme"
      ]
    }
    // {
    //   // Goto Symbol
    //   "before": ["<leader>", "s", "s"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Goto Symbol (Workspace)
    //   "before": ["<leader>", "s", "S"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // TODO-COMMENTS.NVIM
    // {
    //   // Next todo comment
    //   "before": ["]t"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Previous todo comment
    //   "before": ["[t"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Todo (Trouble)
    //   "before": ["<leader>xt"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Todo/Fix/Fixme (Trouble)
    //   "before": ["<leader>xT"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Todo
    //   "before": ["<leader>st"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Todo/Fix/Fixme
    //   "before": ["<leader>sT"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // TROUBLE.NVIM
    // {
    //   // Document Diagnostics (Trouble)
    //   "before": ["<leader>xx"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Workspace Diagnostics (Trouble)
    //   "before": ["<leader>xX"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Location List (Trouble)
    //   "before": ["<leader>xL"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Quickfix List (Trouble)
    //   "before": ["<leader>xQ"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Previous trouble/quickfix item
    //   "before": ["[q"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Next trouble/quickfix item
    //   "before": ["]q"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // VIM-ILLUMINATE
    // {
    //   // Next Reference
    //   "before": ["]]"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Prev Reference
    //   "before": ["[["],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // YANKY.NVIM
    // {
    //   // Open Yank History
    //   "before": ["<leader>p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Yank text
    //   "before": ["y"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put yanked text after cursor
    //   "before": ["p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put yanked text before cursor
    //   "before": ["P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put yanked text after selection
    //   "before": ["gp"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put yanked text before selection
    //   "before": ["gP"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Cycle forward through yank history
    //   "before": ["[y"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Cycle backward through yank history
    //   "before": ["]y"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put indented after cursor (linewise)
    //   "before": ["]p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put indented before cursor (linewise)
    //   "before": ["[p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put indented after cursor (linewise)
    //   "before": ["]P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put indented before cursor (linewise)
    //   "before": ["[P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put and indent right
    //   "before": [">p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put and indent left
    //   "before": ["<p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put before and indent right
    //   "before": [">P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put before and indent left
    //   "before": ["<P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put after applying a filter
    //   "before": ["=p"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Put before applying a filter
    //   "before": ["=P"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-DAP
    // {
    //   // Breakpoint Condition
    //   "before": ["<leader>dB"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Breakpoint
    //   "before": ["<leader>db"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Continue
    //   "before": ["<leader>dc"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Run to Cursor
    //   "before": ["<leader>dC"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Go to line (no execute)
    //   "before": ["<leader>dg"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Step Into
    //   "before": ["<leader>di"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Down
    //   "before": ["<leader>dj"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Up
    //   "before": ["<leader>dk"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Run Last
    //   "before": ["<leader>dl"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Step Out
    //   "before": ["<leader>do"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Step Over
    //   "before": ["<leader>dO"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Pause
    //   "before": ["<leader>dp"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle REPL
    //   "before": ["<leader>dr"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Session
    //   "before": ["<leader>ds"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Terminate
    //   "before": ["<leader>dt"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Widgets
    //   "before": ["<leader>dw"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-DAP-UI
    // {
    //   // Dap UI
    //   "before": ["<leader>du"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Eval
    //   "before": ["<leader>de"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // ONE-SMALL-STEP-FOR-VIMKIND
    // {
    //   // Adapter Lua Server
    //   "before": ["<leader>daL"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Adapter Lua
    //   "before": ["<leader>dal"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // FLIT.NVIM
    // {
    //   // f
    //   "before": ["f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // F
    //   "before": ["F"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // t
    //   "before": ["t"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // T
    //   "before": ["T"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // LEAP.NVIM
    // {
    //   // Leap forward to
    //   "before": ["s"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Leap backward to
    //   "before": ["S"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Leap from windows
    //   "before": ["gs"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // MINI.FILES
    // {
    //   // Open mini.files (directory of current file)
    //   "before": ["<leader>fm"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Open mini.files (cwd)
    //   "before": ["<leader>fM"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-DAP-PYTHON
    // {
    //   // Debug Method
    //   "before": ["<leader>dPt"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Debug Class
    //   "before": ["<leader>dPc"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // VENV-SELECTOR.NVIM
    // {
    //   // Select VirtualEnv
    //   "before": ["<leader>cv"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NEOTEST
    // {
    //   // Run File
    //   "before": ["<leader>tt"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Run All Test Files
    //   "before": ["<leader>tT"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Run Nearest
    //   "before": ["<leader>tr"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Summary
    //   "before": ["<leader>ts"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Show Output
    //   "before": ["<leader>to"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Toggle Output Panel
    //   "before": ["<leader>tO"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Stop
    //   "before": ["<leader>tS"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // NVIM-DAP
    // {
    //   // Debug Nearest
    //   "before": ["<leader>td"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // EDGY.NVIM
    // {
    //   // Edgy Toggle
    //   "before": ["<leader>ue"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // {
    //   // Edgy Select Window
    //   "before": ["<leader>uE"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    // PROJECT.NVIM
    // {
    //   // Projects
    //   "before": ["<leader>fp"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
  ]
}
